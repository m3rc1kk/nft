@charset "UTF-8";
:root {
  --color-dark: #2B2B2B;
  --color-dark-alt: #3B3B3B;
  --color-gray: #858584;
  --color-light: #FFFFFF;
  --color-accent: #A259FF;
  --border-radius: 20px;
  --button-padding-y: 19px;
  --button-padding-x: 50px;
  --button-padding-x-alt: 30px;
  --input-height: 60px;
  --font-family-base: "Work Sans", sans-serif;
  --font-family-additional: "Space Mono", sans-serif;
  --container-width: 1050px;
  --container-padding-x: 30px;
  --section-padding-y: 80px;
  --transition-duration: .2s;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (max-width: 1023px) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@media (min-width: 1024px) {
  .visible-tablet {
    display: none !important;
  }
}

@font-face {
  font-family: "Space Mono";
  src: url("../../fonts/SpaceMono-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Space Mono";
  src: url("../../fonts/SpaceMono-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Work Sans";
  src: url("../../fonts/WorkSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Work Sans";
  src: url("../../fonts/WorkSans-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
body {
  font-size: clamp(16px, 1.40625vw, 18px);
  font-family: "Work Sans";
  font-weight: 400;
  line-height: normal;
  color: var(--color-light);
  background-color: var(--color-dark);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1 {
  font-size: 67px;
}

h2 {
  font-size: 51px;
}

h3 {
  font-size: 38px;
}

h4 {
  font-size: 28px;
}

h5 {
  font-size: 22px;
}

.button {
  display: flex;
  column-gap: 12px;
  padding-inline: var(--button-padding-x);
  padding-block: var(--button-padding-y);
  font-weight: 600;
  font-size: 16px;
  color: var(--color-light);
  background-color: var(--color-accent);
  border-radius: var(--border-radius);
  border: 0;
}
@media (hover: hover) {
  .button:hover {
    background-color: var(--color-gray);
  }
}
@media (hover: none) {
  .button:active {
    background-color: var(--color-gray);
  }
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: 0;
  width: 54px;
  aspect-ratio: 1;
  position: relative;
  border-radius: var(--border-radius);
}
@media (hover: hover) {
  .burger-button:hover {
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .burger-button:active {
    background-color: var(--color-accent);
  }
}
.burger-button span, .burger-button span::after, .burger-button span::before {
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  width: 33%;
  height: 2px;
  background-color: var(--color-light);
}
.burger-button span::after, .burger-button span::before {
  content: "";
  width: 66%;
  left: 35%;
}
.burger-button span::after {
  transform: translateY(-5px);
}
.burger-button span::before {
  transform: translateY(5px);
}

.section {
  padding-block: var(--section-padding-y);
}

.cross-button {
  padding: 0;
  background-color: transparent;
  border: 0;
  width: 54px;
  aspect-ratio: 1;
  position: relative;
  border-radius: var(--border-radius);
}
@media (hover: hover) {
  .cross-button:hover {
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .cross-button:active {
    background-color: var(--color-accent);
  }
}
.cross-button::before, .cross-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-dark);
}
.cross-button::before {
  rotate: 45deg;
}
.cross-button::after {
  rotate: -45deg;
}

.header__inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 30px;
  padding-block: 20px;
  font-size: 16px;
  padding-inline: 50px;
}
@media (max-width: 1023px) {
  .header__inner {
    padding-top: 15px;
  }
}
@media (max-width: 1023px) {
  .header__logo {
    width: 182px;
    height: auto;
  }
}
.header__nav {
  margin-left: auto;
}
.header__nav-list {
  display: flex;
  column-gap: 30px;
  padding-right: 30px;
  font-weight: 600;
}
.header__nav-link {
  display: inline-flex;
  height: 48px;
  align-items: center;
}
@media (hover: hover) {
  .header__nav-link:hover {
    color: var(--color-accent);
  }
}
@media (hover: none) {
  .header__nav-link:active {
    color: var(--color-accent);
  }
}
.header__button {
  padding-inline: var(--button-padding-x-alt);
}

.mobile-overlay {
  width: 100%;
  height: 100%;
  border: 0;
  margin: 0;
  padding: 0;
}
.mobile-overlay__close-button-wrapper {
  display: flex;
  justify-content: end;
  padding-right: 50px;
  padding-top: 15px;
}
.mobile-overlay:modal {
  max-width: 100%;
  max-height: 100%;
}
.mobile-overlay__list {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  row-gap: 40px;
  min-height: 80vh;
  font-size: 18px;
}

.hero__inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  align-items: start;
  column-gap: 30px;
}
@media (max-width: 767px) {
  .hero__inner {
    flex-direction: column;
    align-items: center;
    row-gap: 40px;
  }
}
.hero__body {
  display: flex;
  flex-direction: column;
  align-items: start;
  max-width: 500px;
}
@media (max-width: 1023px) {
  .hero__body {
    row-gap: 20px;
    max-width: 330px;
  }
}
@media (max-width: 767px) {
  .hero__body {
    align-items: center;
  }
}
@media (max-width: 1023px) {
  .hero__title {
    font-size: 38px;
  }
}
@media (max-width: 767px) {
  .hero__button {
    width: 100%;
    justify-content: center;
  }
}
.hero__description {
  font-size: clamp(16px, 1.71875vw, 22px);
  line-height: 1.6;
  padding-block: 20px 30px;
}
@media (max-width: 1023px) {
  .hero__description {
    padding: 0;
  }
}
.hero__info {
  display: flex;
  column-gap: 40px;
  padding-top: 30px;
}
@media (max-width: 1023px) {
  .hero__info {
    padding: 0;
  }
}
.hero__info-title {
  font-family: var(--font-family-additional);
}
.hero__info-description {
  font-size: clamp(16px, 1.71875vw, 22px);
}
.hero__img {
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}
@media (max-width: 1023px) {
  .hero__img {
    width: 330px;
    height: auto;
  }
}
@media (max-width: 767px) {
  .hero__img {
    width: 315px;
    height: auto;
  }
}
.hero__image {
  position: relative;
}
.hero__image::after {
  content: "";
  position: absolute;
  bottom: -110px;
  width: 100%;
  height: 110px;
  background-color: var(--color-dark-alt);
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  z-index: -1;
}
.hero__image-title {
  padding-bottom: 10px;
}
.hero__image-body {
  position: absolute;
  bottom: -87px;
  left: 20px;
}
.hero__author {
  display: flex;
  align-items: center;
  column-gap: 12px;
}/*# sourceMappingURL=styles.css.map */